{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getMaxId","length","Math","max","getUser","userId","usersFromServer","find","preparedTodoList","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","setUserID","hasUserIdError","setHasUserIdError","hasAllFields","trim","action","method","type","placeholder","value","onChange","event","target","required","defaultValue","disabled","onClick","preventDefault","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53fa5982.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n        && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n\n);\n","import { Todo } from './types';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const getMaxId = (todos: Todo[]) => {\n  if (!todos.length) {\n    return 1;\n  }\n\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n};\n\nexport const getUser = (userId: number) => {\n  return usersFromServer.find(({ id }) => id === userId);\n};\n\nexport const preparedTodoList: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { getMaxId, getUser, preparedTodoList } from './helpers';\nimport { Todo } from './types';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodoList);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserID] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitle = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setUserID(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setHasTitleError(false);\n\n    setUserID(0);\n    setHasUserIdError(false);\n  };\n\n  const hasAllFields = title.trim() && userId;\n\n  const handleChange = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasUserIdError(!userId);\n    setHasTitleError(!title);\n\n    if (!hasAllFields) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: getMaxId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setTodos(currentTodos => (\n      [...currentTodos, newTodo]\n    ));\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={handleTitle}\n            required\n          />\n          {hasTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            defaultValue={0}\n            onChange={handleSelect}\n            required\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({\n              id,\n              name,\n            }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleChange}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}